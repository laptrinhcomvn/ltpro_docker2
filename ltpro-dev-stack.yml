#=============
# Create Network
#=============
- Create "overlay" network “backend” => subnet: 10.0.5.0/24, “frontend” => subnet: 10.0.6.0/24


#=============
# MYSQL DATA Stack
#=============
version: "3.7"

services:
  mysql:
    image: 'mysql:latest'
    #command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - backend
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - MYSQL_ROOT_PASSWORD=12345678
    volumes:
      #- /home/ubuntu/shared/projects/mysql/mysql_cnf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ltmysqldata:/var/lib/mysql
    ports:
      - '3306:3306'


volumes:
  ltmysqldata:

networks:
  backend:
    external: true



#=============
# PERCONA DATA Stack
#=============
version: "3.7"

services:
  percona:
    image: 'percona/percona-server:latest'
    networks:
      - backend
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - MYSQL_ROOT_PASSWORD=12345678
    volumes:
      #- /home/ubuntu/shared/projects/mysql/mysql_cnf/my.cnf:/etc/mysql/conf.d/my.cnf
      - ltperconadata:/var/lib/mysql
    ports:
      - '3305:3306'

volumes:
  ltperconadata:

networks:
  backend:
    external: true



#=============
# CACHE Stack
#=============
version: "3.7"

services:
  redis:
    image: 'redis:alpine'
    sysctls:
      - net.core.somaxconn=511
    #command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - /home/ubuntu/shared/projects/ltpro_docker2/server/redis/rc.local:/etc/rc.local
      - /home/ubuntu/shared/projects/ltpro_docker2/server/redis/data:/data
    networks:
      - backend
    ports:
      - '6379:6379'

networks:
  backend:
    external: true



#=============
# WEB Stack
#=============
version: "3.7"

services:
  #chatsrv:
  #  image: 'node:17-alpine'
  #  environment:
  #    - ENABLE_IPV6=true
  #    - TZ=Asia/Ho_Chi_Minh
  #  command: 'sh -c "npm run startSrv"'
  #  working_dir: /app
  #  volumes:
  #    - '/home/ubuntu/shared/projects/xclass3/packages/xclass/chat:/app'
  #  networks:
  #    - backend
  #  expose:
  #    - '3000'
  #  restart: always

  phpfpm:
    image: 'laptrinhcomvn/ltpro_phpfpm:latest'
    environment:
      - ENABLE_IPV6=true
      - TZ=Asia/Ho_Chi_Minh
    working_dir: /usr/www/src
    networks:
      - backend
    depends_on:
      - redis
      - mysql
    volumes:
      - '/home/ubuntu/shared/projects/ltpro_docker2/server/php/100-others-debug-win.ini:/p/others/100-others.ini'
      - '/home/ubuntu/shared/projects/xclass3:/usr/www/src/xclass'
      
  crons:
    image: 'laptrinhcomvn/ltpro_phpfpm:latest'
    environment:
      - ENABLE_IPV6=true
      - TZ=Asia/Ho_Chi_Minh
      - CRON_ONLY=1
    working_dir: /usr/www/src
    networks:
      - backend
    depends_on:
      - mysql
    volumes:
      - '/home/ubuntu/shared/projects/ltpro_docker2/server/crontabs/lt-crons:/etc/crontabs/lt-crons'
      - '/home/ubuntu/shared/projects/xclass3:/usr/www/src/xclass'
  
  jobs:
    image: 'laptrinhcomvn/ltpro_phpfpm:latest'
    environment:
      - ENABLE_IPV6=true
      - TZ=Asia/Ho_Chi_Minh
      - JOB_ONLY=1
    working_dir: /usr/www/src
    networks:
      - backend
    depends_on:
      - mysql
    volumes:
      - '/home/ubuntu/xclass_jobs:/etc/service/xclass_jobs'
      - '/home/ubuntu/shared/projects/xclass3:/usr/www/src/xclass'

  nginx:
    image: 'laptrinhcomvn/ltpro_nginx:latest'
    environment:
      - ENABLE_IPV6=true
      - TZ=Asia/Ho_Chi_Minh
    working_dir: /usr/www/src
    networks:
      - backend
      - frontend
    depends_on:
      - phpfpm
    ports:
      - "80:80"
      - "443:443"
    volumes:
      #- '/home/ubuntu/shared/projects/ltpro_docker2/server/nginx/nginx.conf:/etc/nginx/nginx.conf'
      #- '/home/ubuntu/shared/projects/ltpro_docker2/server/nginx/geoip:/etc/nginx/geoip'
      - '/home/ubuntu/shared/projects/nginx-servers:/etc/nginx/sites-enabled'
      - '/home/ubuntu/shared/projects/xclass3:/usr/www/src/xclass'

networks:
  backend:
    external: true
  frontend:
    external: true
      